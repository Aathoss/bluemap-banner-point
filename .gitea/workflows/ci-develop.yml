name: CI - D√©veloppement
run-name: CI - D√©veloppement

on:
  push:
    branches:
      - develop
      - dev
  pull_request:
    branches:
      - main
      - develop

env:
  PROJECT_NAME: bluemap-banner-point
  JAVA_VERSION: 21

jobs:
  # Job de notification Discord
  notify-start:
    runs-on: ubuntu-latest
    steps:
      - name: Notification de d√©but
        run: |
          if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            curl -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "embeds": [{
                "title": "üöÄ D√©but du build CI",
                "description": "**Projet:** ${{ env.PROJECT_NAME }}\n**Branche:** ${{ gitea.ref_name }}\n**Commit:** ${{ gitea.sha }}\n**Auteur:** ${{ gitea.actor }}",
                "color": 3447003,
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
              }]
            }'
          fi

  # Job principal de build et tests
  build-and-test:
    runs-on: ubuntu-latest
    needs: notify-start
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installation de Java ${{ env.JAVA_VERSION }}
        run: |
          echo "üîß Installation de Java ${{ env.JAVA_VERSION }}..."
          sudo apt-get update
          sudo apt-get install -y openjdk-${{ env.JAVA_VERSION }}-jdk
          java -version
          echo "‚úÖ Java install√©"

      - name: Installation de Maven
        run: |
          echo "üì¶ Installation de Maven..."
          sudo apt-get install -y maven
          mvn -version
          echo "‚úÖ Maven install√©"

      - name: V√©rification des traductions
        run: |
          echo "üîç V√©rification des cl√©s de traduction..."
          python3 check_translations.py
          if [ $? -ne 0 ]; then
            echo "‚ùå Erreur dans les traductions"
            exit 1
          fi
          echo "‚úÖ Traductions OK"

      - name: Compilation et tests
        run: |
          echo "üî® Compilation du projet..."
          mvn clean compile
          if [ $? -ne 0 ]; then
            echo "‚ùå Erreur de compilation"
            exit 1
          fi
          echo "‚úÖ Compilation r√©ussie"

      - name: Build sans tests (pour v√©rifier le packaging)
        run: |
          echo "üì¶ Test de packaging..."
          mvn package -DskipTests
          if [ $? -ne 0 ]; then
            echo "‚ùå Erreur de packaging"
            exit 1
          fi
          echo "‚úÖ Packaging r√©ussi"

      - name: Upload des artefacts de build
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: build-artifacts
          path: |
            target/*.jar
            target/classes/
          retention-days: 7

  # Job de notification de fin
  notify-end:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()
    steps:
      - name: Notification de fin
        run: |
          if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            if [ "${{ needs.build-and-test.result }}" == "success" ]; then
              STATUS="Succ√®s"
              COLOR="3066993"
              EMOJI="üéâ"
            else
              STATUS="√âchec"
              COLOR="15158332"
              EMOJI="üí•"
            fi

            curl -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "embeds": [{
                "title": "'"$EMOJI $STATUS du build CI"'",
                "description": "**Projet:** ${{ env.PROJECT_NAME }}\n**Branche:** ${{ gitea.ref_name }}\n**Commit:** ${{ gitea.sha }}\n**Auteur:** ${{ gitea.actor }}",
                "color": '"$COLOR"',
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
              }]
            }'
          fi
